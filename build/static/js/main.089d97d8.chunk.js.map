{"version":3,"sources":["Header.js","Property.js","Properties.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Property","property","className","house_number","street_name","neighbourhood","Properties","properties","map","account_number","fetchProperties","updateCb","a","fetch","res","json","console","log","App","React","useState","propertyList","updateProperties","loading","setLoading","useEffect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wLAaeA,EAXA,WACb,OACE,8BACE,mCACE,qDACA,0DCMOC,EAXE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAClB,OACE,sBAAKC,UAAU,OAAf,UACE,8BACGD,EAASE,aADZ,IAC2BF,EAASG,eAEpC,4BAAIH,EAASI,oBCKJC,EAVI,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACpB,OACE,8BACGA,EAAWC,KAAI,SAACP,GAAD,OACd,cAAC,EAAD,CAAUA,SAAUA,GAAeA,EAASQ,sBCE9CC,EAAe,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACJC,MAHO,sBAEH,cAChBC,EADgB,gBAEHA,EAAIC,OAFD,OAEhBA,EAFgB,OAGtBC,QAAQC,IAAIF,GACZJ,EAASI,GAJa,2CAAH,sDAwBNG,MAjBf,WAAgB,IAAD,EAC4BC,IAAMC,SAAS,IAD3C,mBACNC,EADM,KACQC,EADR,OAEiBH,IAAMC,UAAS,GAFhC,mBAENG,EAFM,KAEGC,EAFH,KAOb,OAJAL,IAAMM,WAAU,WACdf,EAAgBY,GAChBE,GAAW,KACV,IAED,qBAAKtB,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,IACCqB,EAAU,4CAAqB,cAAC,EAAD,CAAYhB,WAAYc,UCfjDK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.089d97d8.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n  return (\n    <div>\n      <header>\n        <h1>Property Assessment</h1>\n        <h2>Edmonton Open Data</h2>\n      </header>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nconst Property = ({ property }) => {\n  return (\n    <div className='item'>\n      <p>\n        {property.house_number} {property.street_name}\n      </p>\n      <p>{property.neighbourhood}</p>\n    </div>\n  );\n};\n\nexport default Property;\n","import React from 'react';\nimport Property from './Property';\n\nconst Properties = ({ properties }) => {\n  return (\n    <div>\n      {properties.map((property) => (\n        <Property property={property} key={property.account_number} />\n      ))}\n    </div>\n  );\n};\n\nexport default Properties;\n","import React from 'react';\nimport { Modal, Button, Spin } from 'antd';\nimport Header from './Header';\n// import 'antd/dist/antd.css';\nimport './index.css';\nimport Properties from './Properties';\n\nconst PROPERTIES_API_URL = '/api/v1/properties';\n\nconst fetchProperties = async (updateCb) => {\n  const res = await fetch(PROPERTIES_API_URL);\n  const json = await res.json();\n  console.log(json);\n  updateCb(json);\n};\n\nfunction App() {\n  const [propertyList, updateProperties] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n  React.useEffect(() => {\n    fetchProperties(updateProperties);\n    setLoading(false);\n  }, []);\n  return (\n    <div className='App'>\n      <div className='container'>\n        <Header />\n        {loading ? <p>Loading ...</p> : <Properties properties={propertyList} />}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}